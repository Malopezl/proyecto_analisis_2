/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.proyectoa2.ventas.vista;

import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.marcos.dto.Cliente;
import org.proyectoa2.ventas.controller.ManejoCobroSaldo;
import org.proyectoa2.ventas.controller.ManejoListaClientes;

/**
 *
 * @author marcos
 */
public class CobrarSaldoForm extends javax.swing.JFrame {
    private ManejoListaClientes manejador;
    private ManejoCobroSaldo manejadorCobro;
    /**
     * Creates new form CobrarSaldoForm
     */
    public CobrarSaldoForm() {
        initComponents();
        manejador = ManejoListaClientes.obtenerManejador();
        this.ActualizarListaClientes();
        manejadorCobro = new ManejoCobroSaldo();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelNombre = new javax.swing.JLabel();
        labelSaldo = new javax.swing.JLabel();
        labelDeplegarSaldo = new javax.swing.JLabel();
        labelCantidadPagar = new javax.swing.JLabel();
        textoCantidadPagar = new javax.swing.JTextField();
        botonConfirmarPago = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        listaSeleccionClientes = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textoMontoPagado = new javax.swing.JTextField();

        setMinimumSize(new java.awt.Dimension(657, 488));
        setPreferredSize(new java.awt.Dimension(657, 488));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelNombre.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        labelNombre.setText("Nombre");
        getContentPane().add(labelNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        labelSaldo.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        labelSaldo.setText("Saldo");
        getContentPane().add(labelSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        labelDeplegarSaldo.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        labelDeplegarSaldo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(labelDeplegarSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 600, 30));

        labelCantidadPagar.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        labelCantidadPagar.setText("Cantidad a Pagar");
        getContentPane().add(labelCantidadPagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        textoCantidadPagar.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        textoCantidadPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoCantidadPagarActionPerformed(evt);
            }
        });
        getContentPane().add(textoCantidadPagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 600, -1));

        botonConfirmarPago.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        botonConfirmarPago.setText("Confirmar Pago");
        botonConfirmarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConfirmarPagoActionPerformed(evt);
            }
        });
        getContentPane().add(botonConfirmarPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 310, -1));

        botonCancelar.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(botonCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 420, 280, -1));

        listaSeleccionClientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " -- Seleccione el cliente --"}));
        listaSeleccionClientes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                listaSeleccionClientesItemStateChanged(evt);
            }
        });
        listaSeleccionClientes.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                listaSeleccionClientesPropertyChange(evt);
            }
        });
        getContentPane().add(listaSeleccionClientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 600, -1));

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel1.setText("Pago de Saldo");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel2.setText("Monto Pagado");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, -1));

        textoMontoPagado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoMontoPagadoActionPerformed(evt);
            }
        });
        getContentPane().add(textoMontoPagado, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 600, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textoCantidadPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoCantidadPagarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoCantidadPagarActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void botonConfirmarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConfirmarPagoActionPerformed
        if(this.listaSeleccionClientes.getSelectedIndex() == 0
                || this.textoCantidadPagar.getText().length() == 0
                || this.textoMontoPagado.getText().length() == 0){
            String tmpError = "Error, no se puede procesar la transaccion.";
            if(this.listaSeleccionClientes.getSelectedIndex() == 0){
                tmpError = tmpError + "   * Seleccione un cliente valido";
            }
            if(this.textoCantidadPagar.getText().length() == 0){
                tmpError = tmpError + "   * el campo 'cantidad a pagar' esta vacio";
            }
            if(this.textoMontoPagado.getText().length() == 0){
                tmpError = tmpError + "   * el campo 'Monto pagado' esta vacio";
            }
            
            JOptionPane.showMessageDialog(null, tmpError, "Error, no se puede procesar!!!", JOptionPane.WARNING_MESSAGE);
        }else{
        
            Cliente tmp = manejadorCobro.obtenerCliente(this.listaSeleccionClientes.getSelectedIndex());
            if(tmp.getSaldo() < Double.valueOf(this.textoCantidadPagar.getText())||
                    Double.valueOf(this.textoCantidadPagar.getText()) > Double.valueOf(this.textoMontoPagado.getText())){
                String tmpError = "No se puede procesar la transaccion";
                if(Double.valueOf(this.textoCantidadPagar.getText()) > Double.valueOf(this.textoMontoPagado.getText())){
                    tmpError = tmpError + "   * la cantidad a pagar es mayor que el monto pagado";
                }
                if(tmp.getSaldo() < Double.valueOf(this.textoCantidadPagar.getText())){
                    tmpError = tmpError + "   * El saldo es menor que la cantidad a pagar";
                }
                JOptionPane.showMessageDialog(null, tmpError, "Error, no se puede procesar!!!", JOptionPane.WARNING_MESSAGE);
            }else{
                double cambio  = manejadorCobro.realiarPago(tmp, Double.valueOf(this.textoMontoPagado.getText()), Double.valueOf(this.textoCantidadPagar.getText()));
                JOptionPane.showMessageDialog(null, "Transaccion realizada con exito.\n   el cambio es Q." + cambio, "Error, no se puede procesar!!!", JOptionPane.INFORMATION_MESSAGE);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_botonConfirmarPagoActionPerformed

    private void textoMontoPagadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoMontoPagadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoMontoPagadoActionPerformed

    private void listaSeleccionClientesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_listaSeleccionClientesPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_listaSeleccionClientesPropertyChange

    private void listaSeleccionClientesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_listaSeleccionClientesItemStateChanged
        // TODO add your handling code here:
        if(this.listaSeleccionClientes.getSelectedIndex() > 0){
            this.labelDeplegarSaldo.setText(Double.toString(manejador.getCliente(this.listaSeleccionClientes.getSelectedIndex() - 1).getSaldo()));
        }
    }//GEN-LAST:event_listaSeleccionClientesItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CobrarSaldoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CobrarSaldoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CobrarSaldoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CobrarSaldoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CobrarSaldoForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonConfirmarPago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelCantidadPagar;
    private javax.swing.JLabel labelDeplegarSaldo;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelSaldo;
    private javax.swing.JComboBox<String> listaSeleccionClientes;
    private javax.swing.JTextField textoCantidadPagar;
    private javax.swing.JTextField textoMontoPagado;
    // End of variables declaration//GEN-END:variables
    public void ActualizarListaClientes(){
        DefaultComboBoxModel modelo = new DefaultComboBoxModel<>(new String[] {"---- Seleccione al Cliente ----"});
        manejador.actualizarClientes();
        listaSeleccionClientes.setModel(modelo);
        ArrayList<Cliente> lista = manejador.geListaClientes();
        String tmp;
        for(Cliente item : lista){
            tmp = item.getNombreCliente() + " | Saldo: " + item.getSaldo();
            listaSeleccionClientes.addItem(tmp);
        }
    }
}
