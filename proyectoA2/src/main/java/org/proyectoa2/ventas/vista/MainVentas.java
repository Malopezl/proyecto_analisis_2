/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.proyectoa2.ventas.vista;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.marcos.dto.Orden;
import org.proyectoa2.ventas.controller.ManejoColaOrdenes;
import org.proyectoa2.ventas.controller.ObservadorVentas;

/**
 *
 * @author marcos
 */
public class MainVentas extends javax.swing.JPanel implements ObservadorVentas {
    private NuevaOrdenForm nuevaOrdenFormulario;
    private AtenderOrdenForm atenderOrden;
    private CobrarOrdenForm cobrarOrden;
    private CobrarSaldoForm cobrarSaldo;
    private ManejoColaOrdenes manejador;
    /**
     * Creates new form MainVentas
     */
    public MainVentas() {
        initComponents();
        manejador = ManejoColaOrdenes.obtenerControlador();
        manejador.addObservador(this);
        this.actualizar();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        etiquetaColaOrdenes = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        botonNuevaOrden = new javax.swing.JButton();
        cancelarOrdenBoton = new javax.swing.JButton();
        editarOrdenBoton = new javax.swing.JButton();
        atenderOrdenBoton = new javax.swing.JButton();
        botonCobrarOrden = new javax.swing.JButton();
        etiquetaOpciones = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayColaOrdenes = new javax.swing.JList<>();

        setMinimumSize(new java.awt.Dimension(1080, 740));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(1080, 740));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        etiquetaColaOrdenes.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        etiquetaColaOrdenes.setText("Cola de Ordenes");
        add(etiquetaColaOrdenes, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 30, -1, 30));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 10, 640));

        botonNuevaOrden.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        botonNuevaOrden.setText("Registrar Nueva Orden");
        botonNuevaOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevaOrdenActionPerformed(evt);
            }
        });
        add(botonNuevaOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 380, 50));

        cancelarOrdenBoton.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        cancelarOrdenBoton.setText("Cancelar Orden Seleccionada");
        cancelarOrdenBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarOrdenBotonActionPerformed(evt);
            }
        });
        add(cancelarOrdenBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 380, 50));

        editarOrdenBoton.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        editarOrdenBoton.setText("Editar Orden");
        editarOrdenBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarOrdenBotonActionPerformed(evt);
            }
        });
        add(editarOrdenBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 380, 50));

        atenderOrdenBoton.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        atenderOrdenBoton.setText("Atender Orden");
        atenderOrdenBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atenderOrdenBotonActionPerformed(evt);
            }
        });
        add(atenderOrdenBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 380, 50));

        botonCobrarOrden.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        botonCobrarOrden.setText("Cobrar Orden Seleccionada");
        botonCobrarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCobrarOrdenActionPerformed(evt);
            }
        });
        add(botonCobrarOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 380, 50));

        etiquetaOpciones.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        etiquetaOpciones.setText("Opciones");
        add(etiquetaOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, -1, -1));

        jButton1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButton1.setText("Cancelar Saldo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 520, 380, 50));

        displayColaOrdenes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(displayColaOrdenes);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, 600, 580));
    }// </editor-fold>//GEN-END:initComponents

    private void botonNuevaOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevaOrdenActionPerformed
        // TODO add your handling code here:
        nuevaOrdenFormulario = new NuevaOrdenForm("Nueva Orden");
        nuevaOrdenFormulario.setVisible(true);
    }//GEN-LAST:event_botonNuevaOrdenActionPerformed

    private void editarOrdenBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarOrdenBotonActionPerformed
        // TODO add your handling code here:\
        if(this.displayColaOrdenes.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(null, "Seleccione una orden valida para editar", "Error, no se puede procesar!!!", JOptionPane.WARNING_MESSAGE);
        }else{
        
            Orden ordent = this.manejador.obtenerOrden(this.displayColaOrdenes.getSelectedIndex());
            if(ordent.getEstado() == 1){
                nuevaOrdenFormulario = new NuevaOrdenForm("Editar Orden", ordent);
                nuevaOrdenFormulario.setVisible(true);
            }else{
                JOptionPane.showMessageDialog(null, "Las ordenes que ya han sido atendidas\n no pueden editarse", "Error, no se puede procesar!!!", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_editarOrdenBotonActionPerformed

    private void atenderOrdenBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atenderOrdenBotonActionPerformed
        // TODO add your handling code here:
        Orden ordent = this.manejador.atenderOrden();
        if(ordent != null){
        
            this.atenderOrden = new AtenderOrdenForm(ordent);
            this.atenderOrden.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "No quedan ordenes por atender", "Error, no se puede procesar!!!", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_atenderOrdenBotonActionPerformed

    private void botonCobrarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCobrarOrdenActionPerformed
        // TODO add your handling code here:
        if(this.displayColaOrdenes.getSelectedIndex() < 0 ){
            JOptionPane.showMessageDialog(null, "Seleccione una orden valida", "Error, no se puede procesar!!!", JOptionPane.WARNING_MESSAGE);
        }else{
        
            this.cobrarOrden = new CobrarOrdenForm(this.manejador.obtenerOrden(this.displayColaOrdenes.getSelectedIndex()));
            this.cobrarOrden.setVisible(true);
        }
    }//GEN-LAST:event_botonCobrarOrdenActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.cobrarSaldo = new CobrarSaldoForm();
        this.cobrarSaldo.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cancelarOrdenBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarOrdenBotonActionPerformed
        // TODO add your handling code here:
        if(this.displayColaOrdenes.getSelectedIndex() < 0 ){
            String tmp = "Error, no se la seleccionado un complemento de la lista";
            if(this.displayColaOrdenes.getSelectedIndex() < 0)
            {
                tmp += "\n   * Seleccione una orden valida";
            }
            if(manejador.obtenerCola().isEmpty())
            {
                tmp += "\n   * No se encontro ninguna orden";
            }
            JOptionPane.showMessageDialog(null, tmp, "Error, no se puede procesar!!!", JOptionPane.WARNING_MESSAGE);
        }else{
            Orden temp = manejador.obtenerCola().get(this.displayColaOrdenes.getSelectedIndex());
            if(temp.getEstado() == 1){
                manejador.eliminarOrden(temp);
            }else{
                JOptionPane.showMessageDialog(null, "Las ordenes que ya han sido atendidas\n no pueden eliminarse", "Error, no se puede procesar!!!", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_cancelarOrdenBotonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atenderOrdenBoton;
    private javax.swing.JButton botonCobrarOrden;
    private javax.swing.JButton botonNuevaOrden;
    private javax.swing.JButton cancelarOrdenBoton;
    private javax.swing.JList<String> displayColaOrdenes;
    private javax.swing.JButton editarOrdenBoton;
    private javax.swing.JLabel etiquetaColaOrdenes;
    private javax.swing.JLabel etiquetaOpciones;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actualizar() {
        ArrayList<Orden> lista = manejador.obtenerCola();
        DefaultListModel modelo = new DefaultListModel();        
        String tmp;
        int contador = 1;
        for(Orden item : lista){
            tmp = " " + contador++ +".) " + item.getCliente().getNombreCliente();
            if(item.getEstado() == 1){
                tmp = tmp + " || estado: En espera || Total: "+ + item.getTotal();
            }else{
                tmp = tmp + " || estado: Atendido || Total: "+ + item.getTotal();
            }
            modelo.addElement(tmp);
            
        }
        this.displayColaOrdenes.setModel(modelo);
    }
}
